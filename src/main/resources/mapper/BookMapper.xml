<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beau.graduation.dao.BookDao">

    <resultMap id="BaseResultMap" type="com.beau.graduation.model.dto.BookDto" >
        <result column="id" property="id" />
        <result column="title" property="title" />
        <result column="author" property="author" />
        <result column="publish_date" property="publishDate" />
        <result column="publisher" property="publisher" />
        <result column="introduction" property="introduction" />
        <result column="recommend_flag" property="recommendFlag" />
        <result column="reserve" property="reserve" />
        <result column="sales" property="sales" />
        <result column="price" property="price" />
        <result column="img_url" property="imgUrl"/>
        <result column="type_name" property="bookType"/>
        <result column="type_id" property="typeId"/>
        <result column="review_status" property="reviewStatus"/>
        <result column="sale_status" property="saleStatus"/>
        <result column="sort" property="sort"/>
    </resultMap>


    <sql id="Base_Column_List">
        tb.id as id,
        tb.title as title,
        tb.author as author,
        tb.publish_date as publish_date,
        tb.publisher as publisher,
        tb.introduction as introduction,
        tb.recommend_flag as recommend_flag,
        tb.reserve as reserve,
        tb.sales as sales,
        tb.price as price,
        tbi.img_url as img_url
    </sql>

    <sql id="shopping_cart_column">
        tb.id as id,
        tb.title as title,
        tb.author as author,
        tb.price as price,
        tbi.img_url as img_url
    </sql>

    <!-- 批量插入数据 -->
    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO tm_book ( <include refid="Base_Column_List" /> ) VALUES
        <foreach collection="list" item="curr" index="index" separator=",">
            (
                #{curr.id},
                #{curr.title},
                #{curr.author},
                #{curr.saleStatus},
                #{curr.reviewStatus},
                #{curr.publishDate},
                #{curr.publisher},
                #{curr.introduction},
                #{curr.delFlag},
                #{curr.recommendFlag},
                #{curr.reserve},
                #{curr.sales},
                #{curr.price}
            )
        </foreach>
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="com.beau.graduation.model.Book">
        UPDATE tm_book
        <set>
            <if test ='null != book.title'>title = #{book.title},</if>
            <if test ='null != book.author'>author = #{book.author},</if>
            <if test ='null != book.saleStatus'>sale_status = #{book.saleStatus},</if>
            <if test ='null != book.reviewStatus'>review_status = #{book.reviewStatus},</if>
            <if test ='null != book.publishDate'>publish_date = #{book.publishDate},</if>
            <if test ='null != book.publisher'>publisher = #{book.publisher},</if>
            <if test ='null != book.introduction'>introduction = #{book.introduction},</if>
            <if test ='null != book.delFlag'>del_flag = #{book.delFlag},</if>
            <if test ='null != book.recommendFlag'>recommend_flag = #{book.recommendFlag},</if>
            <if test ='null != book.reserve'>reserve = #{book.reserve},</if>
            <if test ='null != book.sales'>sales = #{book.sales},</if>
            <if test ='null != book.price'>price = #{book.price}</if>
        </set>
        WHERE id = book.id
    </update>

    <!-- 删除 -->
    <delete id="delete">
        DELETE FROM tm_book
        WHERE id = #{book.book}
    </delete>

    <!-- 批量删除 -->
    <delete id="batchDelete" parameterType = "java.util.List">
        DELETE FROM tm_book WHERE id IN
        <foreach collection="list"  item="item" open="(" separator="," close=")"  >
            #{item}
        </foreach>
    </delete>

    <!-- 主键查询 -->
    <select id="selectByObj" resultMap="BaseResultMap">
        SELECT
            tb.id AS id,
            group_concat(tbi.img_url SEPARATOR ';') AS img_url,
            tb.title AS title,
            tb.introduction as introduction,
            tb.price AS price,
            tb.type_id as type_id,
            tbt.name AS type_name,
            tb.recommend_flag AS recommend_flag,
            tb.reserve AS reserve,
            (
            SELECT
                sum( CASE WHEN tbo.amount != 0 THEN tbo.amount ELSE 0 END )
            FROM
                tm_book_order tbo
            WHERE
                tb.id = tbo.book_id
            ) AS sales,
            tb.review_status AS review_status,
            tb.publisher as publisher,
            tb.publish_date as publish_date,
            tb.sort as sort,
            tb.sale_status AS sale_status,
            tb.author as author
        FROM tm_book tb
        left join tm_book_type tbt on tb.type_id=tbt.id
        left join tm_book_image tbi on tb.id=tbi.book_id
        WHERE
            tb.del_flag = '0'
            and tbi.del_flag = '0'
            and tb.id = #{book.id}
    </select>

    <select id="totalByDto" resultType="java.lang.Integer">
        SELECT
            count(distinct (tb.id))
        FROM tm_book tb
        <where>
            tb.del_flag = '0'
            <if test ='@com.beau.graduation.utils.MapperUtil@isNotEmpty(bookDto.title)'>
                and (tb.title like concat('%',#{bookDto.title},'%')
                or tb.author like concat('%',#{bookDto.title},'%') or tb.publisher like concat('%',#{bookDto.title},'%'))
            </if>
            <if test ='@com.beau.graduation.utils.MapperUtil@isNotEmpty(bookDto.saleStatus)'>
                and tb.sale_status = #{bookDto.saleStatus}
            </if>
            <if test ='@com.beau.graduation.utils.MapperUtil@isNotEmpty(bookDto.reviewStatus)'>
                and tb.review_status = #{bookDto.reviewStatus}
            </if>
            <if test ='@com.beau.graduation.utils.MapperUtil@isNotEmpty(bookDto.bookType)'>
                and tb.type_id = #{bookDto.bookType}
            </if>
        </where>
    </select>

    <select id="getCommodityPage" resultMap="BaseResultMap">
        SELECT
        tb.id AS id,
        group_concat(tbi.img_url) AS img_url,
        tb.title AS title,
        tb.introduction as introduction,
        tb.price AS price,
        tb.type_id as type_id,
        tbt.name AS type_name,
        tb.recommend_flag AS recommend_flag,
        tb.reserve AS reserve,
        (
        SELECT
        sum( CASE WHEN tbo.amount != 0 THEN tbo.amount ELSE 0 END )
        FROM
        tm_book_order tbo
        WHERE
        tb.id = tbo.book_id
        ) AS sales,
        tb.review_status AS review_status,
        tb.publisher as publisher,
        tb.publish_date as publish_date,
        tb.sort as sort,
        tb.sale_status AS sale_status,
        tb.author as author
        FROM tm_book tb
        left join tm_book_type tbt on tb.type_id=tbt.id
        left join tm_book_image tbi on tb.id=tbi.book_id
        <where>
            tb.del_flag = '0'
            and tbi.del_flag = '0'
            <if test='@com.beau.graduation.utils.MapperUtil@isNotEmpty(bookDto.title)'>
                and (tb.title like concat('%',#{bookDto.title},'%')
                or tb.author like concat('%',#{bookDto.title},'%') or tb.publisher like
                concat('%',#{bookDto.title},'%'))
            </if>
            <if test='@com.beau.graduation.utils.MapperUtil@isNotEmpty(bookDto.saleStatus)'>
                and tb.sale_status = #{bookDto.saleStatus}
            </if>
            <if test='@com.beau.graduation.utils.MapperUtil@isNotEmpty(bookDto.reviewStatus)'>
                and tb.review_status = #{bookDto.reviewStatus}
            </if>
            <if test='@com.beau.graduation.utils.MapperUtil@isNotEmpty(bookDto.bookType)'>
                and tb.type_id = #{bookDto.bookType}
            </if>
        </where>
        group by tb.id
        order by tb.recommend_flag desc,tb.sort desc,tb.create_time desc
        limit #{page.index},#{page.size}
    </select>

    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="shopping_cart_column"/>
        FROM tm_book tb
        left join tm_book_image tbi on tb.id=tbi.book_id
        <where>
            <if test="null != bookId">
                tb.id = #{bookId}
            </if>
            and tb.review_status = '1'
            and tb.sale_status = '1'
            and tb.del_flag = '0'
        </where>
    </select>

</mapper>